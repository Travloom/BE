name: Travloom CI/CD

on:
  push:
    branches: [deploy/1-cicd]

jobs:
  build:
    runs-on: ubuntu-latest  # develop 브랜치에 push가 일어날 때 실행

    steps:
      - uses: actions/checkout@v3   # 저장소 코드 체크아웃

      - name: Set up JDK 21   # Java 개발 킷 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Make application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
          cat application.yml
        shell: bash

      - name: Grant execute permission for gradlew  # gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Build with Gradle  # Gradle을 사용하여 프로젝트 빌드
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build --stacktrace --info

      - name: Upload build artifact  # 빌드된 아티팩트 업로드
        uses: actions/upload-artifact@v4
        with:
          name: QaTServer
          path: build/libs/*.jar

  deploy:
    needs: build  # build 작업이 성공적으로 완료된 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact   # 이전 단계에서 업로드한 아티팩트 다운로드
        uses: actions/download-artifact@v4
        with:
          name: QaTServer
          path: build/libs/

      - name: Deploy to EC2   # EC2에 배포
        env:
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          
          sudo apt-get update
          sudo apt-get install -y sshpass
          
          jar_file=$(find build/libs -name '*.jar' ! -name '*plain.jar' | head -n 1)
          
          sshpass -p "$EC2_PASSWORD" scp -o StrictHostKeyChecking=no "$jar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/q-at-server.jar
  
          sshpass -p "$EC2_PASSWORD" ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            pgrep java | xargs -r kill -15
            sleep 10
            nohup java -jar /home/$EC2_USERNAME/q-at-server.jar > app.log 2>&1 &
          "
    
